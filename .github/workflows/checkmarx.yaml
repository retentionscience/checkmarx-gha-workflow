name: Run Checkmarx

on:
  workflow_call:
    inputs:
      project:
        required: false
        type: string
        default: ${{ github.repository }}-PR
      checkmarx_url:
        required: false
        type: string
        default: https://ctct.checkmarx.net
      incremental:
        required: false
        type: string
        default: false
      scanners:
        required: false
        type: string
        default: sast, sca
      break_build:
        required: false
        type: string
        default: true
      github_token:
        required: false
        type: string
      bug_tracker:
        required: false
        type: string
        default: GITHUBPULL
      filter_params:
        required: false
        type: string
        default: --cx-flow.filterSeverity --cx-flow.filterCategory --cx-flow.thresholds.high=0 --cx-flow.thresholds.medium=0 --cx-flow.thresholds.low=0 --sca.thresholds-score=11
      params:
        required: false
        type: string


jobs:
  test:
    name: Checkmarx
    runs-on: [self-hosted]
    concurrency:
      group: checkmarx
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.pull_request.head.sha }}

      - name: Verify environment
        run: |
          if [ "${{ secrets.CHECKMARX_TEAM }}" == '' ]; then echo "Error: CHECKMARX_TEAM was not set"; exit 1; fi

      - name: Remove unneeded files
        run: |
          rm -rf db spec script/data_migrations ./public/images/seconds_animated_60.gif test tests
          find . -name __tests__ -o -name __mocks__ -print0 | xargs -0 rm -rf
          if test -f Pipfile.lock;then jq -r '.default | to_entries[] | .key + .value.version' Pipfile.lock > requirements.txt;fi

      - name: Figure out Github Token
        run: |
          if [ -n "${{ inputs.github_token }}" ];then
            echo "MY_GITHUB_TOKEN=${{ inputs.github_token }}" >> .env
          else
            echo "MY_GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> .env
          fi

      - name: Checkmarx CxFlow Action
        uses: checkmarx-ts/checkmarx-cxflow-github-action@v1.5
        with:
          team: ${{ secrets.CHECKMARX_TEAM }}
          project: ${{ inputs.project }}
          checkmarx_url: ${{ inputs.checkmarx_url }}
          checkmarx_client_secret: ${{ secrets.CHECKMARX_CLIENT_SECRET }}
          checkmarx_password: ${{ secrets.CHECKMARX_PASSWORD }}
          checkmarx_username: ${{ secrets.CHECKMARX_USERNAME }}
          sca_password: ${{ secrets.CHECKMARX_SCA_PASSWORD }}
          sca_username: ${{ secrets.CHECKMARX_SCA_USERNAME }}
          sca_tenant: ${{ secrets.CHECKMARX_SCA_TENANT }}
          incremental: ${{ inputs.incremental }}
          scanners: ${{ inputs.scanners }}
          break_build: ${{ inputs.break_build }}
          bug_tracker: ${{ inputs.bug_tracker }}
          github_token: ${{ env.MY_GITHUB_TOKEN }}
          params: --sca.team=${{ secrets.CHECKMARX_TEAM }} --namespace=${{ github.repository_owner }}  --repo-name=${{ github.event.repository.name }} --branch=${{ github.head_ref }} --merge-id=${{ github.event.number }} ${{ inputs.filter_params }} ${{ inputs.params }}
          java_opts: -Xmx4g
